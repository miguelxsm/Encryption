Curso PROGRAMACIÓN DESDE CERO (02) - ¿Qué son los algoritmos? - YouTube
https://www.youtube.com/watch?v=bwi5oqbkCOs

Transcript:
(00:00) muy buenos días mi nombre es alex y losada yo soy de colombia y estoy muy contento de venir aquí a comer toda la comida que ustedes ofrecen es genial espectacular de todo son muchísimas gracias por eso quiero preguntarles algo antes de comenzar quienes nunca han programado ok porque me dices que nunca es programado cuéntame nada ya pero es que tenemos un mix concepción ahí que más me levanto la mano quien más me levanté la mano tú cuéntame por qué dices que nunca es programado es que hay un problema aquí y es que el
(00:43) concepto de programación no está aplicado solamente a los sistemas informáticos todos hemos programado algo en nuestra vida hemos programado una fiesta hemos programado una cena hemos programado una reunión con nuestros amigos cierto entonces hemos programado algo porque le llamamos programación porque resulta que estamos haciendo un conjunto de pasos para resolver un problema o una necesidad pero siempre lo hemos hecho hoy me levanto tengo que bañarme a la a tal hora desayunar a tal hora el camión a tal hora etcétera
(01:24) etcétera y eso es la programación una serie de pasos para cumplir un objetivo resolver un problema o una necesidad ok pero para poder programar necesitamos ejecutar unos algoritmos diseñar unos algoritmos pero qué es un algoritmo es un conjunto de pasos que nos resuelve un problema o una necesidad si lo haces bien hecho te va a resolver ese problema o necesidad por eso nosotros siempre hemos programado algo en nuestras vidas ahora apliquemos lo a la parte informática qué características debe tener un algoritmo un algoritmo tiene que ser
(02:05) definido qué significa esto significa que un algoritmo si yo lo ejecutó una vez tiene que devolverme un dato y si él ejecutó por segunda vez siempre y cuando le envié los mismos datos de entrada me tiene que devolver los mismos datos de salida siempre si yo tengo por ejemplo el número uno y el número tres y les digo sume esos números tiene que devolverme un 4 verdad si lo hago por segunda vez también tiene que devolverme un 4 si lo hago una tercera vez tiene que volver en un 4 significa que el algoritmo está correctamente
(02:43) definido porque su salida es única siempre y cuando los parámetros sean iguales los parámetros de entrada sean iguales pero ojo toda regla tiene su excepción a veces necesitamos un algoritmo que nos mande un dato diferente siempre un ejemplo un ejemplo de un algoritmo que nos mande un dato diferente un número aleatorio para que no sirve eso para qué para un sorteo entonces miren que toda regla tiene su excepción yo cuando hago un algoritmo quiero que sea definido porque siempre que yo le envié los mismos parámetros de entrada me tiene
(03:24) que dar los mismos parámetros de salida pero hay algunas excepciones como por ejemplo un algoritmo que nunca me dé el mismo número porque quiero sortear algo vale eso es lo primero lo segundo es que tiene que ser preciso no le puede decir oye me sumé su meme uno más uno y me vuelvo un 3 no tiene que ser preciso tiene que hacer lo que se le pidió y hacerlo bien hecho tiene que ser legible es decir que cualquiera cualquier persona pueda ver el algoritmo y decir ok este algoritmo está tomando dos números de entrada y
(04:00) está generando un número de salida entonces yo lo puedo leer fácilmente tiene que ser finito es decir tiene que tener un inicio y un final tiene que ejecutarse en un momento dado entonces también podríamos hablar de algunos programas o perdón algoritmos que son infinitos que es entre comillas infinito por ejemplo un programa que esté escuchando siempre si una persona se conecta o no a un chat para poderle dar acceso al chat entonces el programa en teoría es infinito porque nunca se detiene se va a detener algún momento
(04:37) pero en teóricamente es infinito pero la idea es de un algoritmo es que tenga un inicio y un final no podemos tener un algo que nunca pare ok esas serían las características de un algoritmo vamos a ver cuáles son esas partes importantes del algoritmo los algoritmos van a tener una entrada de datos esa entrada de datos pues ya están definidas o que ya están definidas desde un principio tiene que tener un proceso para procesar esos datos de entrada y obviamente tiene que tener su salida cuál fue el resultado del proceso que
(05:15) ejecute sobre los datos de entrada esas son las tres partes básicas de un algoritmo ahora veamos cómo podemos resolver un algoritmo hablando con una palabra que conocemos como pseudo código pseudo código es decir en palabras en palabras que entendemos los humanos cómo podemos resolver un problema eso le llamamos pseudo código porque le estamos diciendo oye ve para sumar dos números necesito que me des primero los dos números que quieres sumar luego hago la suma de esos dos números que es una operación aritmética y te voy a dar una salida ese
(06:02) sería un pseudo código para sumar dos números pero es algo que entendemos nosotros ok entonces generalmente nosotros resolvemos el problema en nuestras cabecitas y lo expresamos de manera natural a eso lo llamamos pseudo código cómo resolver un problema o necesidad necesitamos tener muy claro cuál es el problema muchas veces una gran porcentaje un gran porcentaje de las veces las personas que tienen un problema a una necesidad no expresan bien qué es lo que necesitan y eso es lo que genera programas malos programas que
(06:41) no hacen lo que se requiere entonces tenemos que tener mucho cuidado en el enunciado el problema tiene que ser claro conciso y completo no me puedes decir hoy en editor una que me resuelva el problema de registrar a las personas para el evento ok óyeme pero yo quería que aparte de que se registrara cuando llegaran confirmarán que vinieron a eso no está porque nunca me lo dijiste completo entonces aquí esta es una de las partes más importantes para resolver cualquier problema cuando quieras resolver un problema tienes que sentarte con la
(07:19) persona quien tiene el problema y hacer una entrevista donde pueda sacarle la mayor cantidad de información y hay algo muy curioso cuando nosotros hacemos software nosotros resolvemos un problema o una necesidad de una persona pero nosotros no somos los que estamos ideando no la solución por lo general en el una gran mayoría de los casos la persona que tiene el problema te dice cómo solucionarla solo que no sabe cómo implementarla en un sistema informático por ejemplo te dice una persona un contador te dice necesito un software
(07:58) que me lleve la contabilidad qué sucede no sabemos contabilidad pero eso no nos impide que podamos resolver esa necesidad que podemos hacer decirle ok voy a sentarme ya entrevistarte y que me digas pues qué es lo que necesitas entonces el contador de manera general te va a decir ok necesito que cuando yo haga una venta se registre el valor de la venta a este lado se registre el valor del impuesto a este otro lado y se registre el valor que recibí a este otro lado quién está dando la solución la misma persona que tiene el problema o la
(08:38) necesidad lo que nosotros hacemos es tomar aterrizar esa esa solución de problemas que nos han dado de manera natural y entregarla en un sistema informático entonces esto es súper lindo porque de verdad vas a aprender de muchas de muchas áreas cuando estás resolviendo problemas trata de si estás trabajando en una empresa o si estás iniciando tu proyecto aprender de todas esas áreas porque puedes llegar un paso más de solo resolver la necesidad de la persona ok entonces tener el enunciado completo es una de las de los puntos clave para poder
(09:19) resolver y hacer un programa bien hecho luego comenzamos y analizamos los datos que se van a procesar cogemos ok qué es lo que vamos a hacer el programa contable que necesitas necesito tener un código de producto un nombre de producto el valor del producto y el porcentaje de impuestos que necesitamos para ese producto en específico genial estamos analizando qué datos vamos a procesar y vamos a tener esos datos de entrada ya la persona nos dice te voy a dar el producto precio impuestos y cantidad de ventas genial luego nosotros le preguntamos y
(09:59) qué quieres que te devuelva a mira lo que yo quiero que me devuelvas que me entregues o sea la salida de lo que nosotros vamos a hacer va a ser que me digas cuánto tiene que pagar en total la persona entonces si compro un producto de 100 soles y el impuesto a las ventas acá es del 19 del 20 de cuánto es vamos a decir 18 para estandarizar entonces si yo te digo que el producto es de 100 soles y son 18 soles de impuestos dime cuánto tiene que pagar la persona en total perfecto tengo los datos de entrada y ya sé cuáles son los
(10:35) datos de salida vamos a ver qué fórmulas necesito yo no sé cómo se saca el impuesto señor contador como sacó el impuesto a mira coges el valor del producto le multiplicas por el impuesto lo divides en 100 y ese es el valor que te va a dar genial ya tengo la fórmula tengo los datos de entrada sé que quiero que devuelva y tengo la fórmula que es lo último que necesitaría datos de prueba o que ya lo hice con 100 pero demás más datos para ver si si lo que yo hice funciona porque qué tal que me sirva consciente pero cuando me traigan
(11:18) un producto de 200 ya no me de 36 sino 20 quedó mal algo cierto entonces dame tus datos de prueba que ya se tienen y si yo meto 100 me tiene que dar 118 si método 100 donde tiene que dar 236 hartos hartos y yo ejecuto esas pruebas para ver si funciona y ya con estos datos ya tienes listo y la solución del problema y lo único que tienes que hacer es escoger un lenguaje de programación que ya álvaro te comento cuales hay compilados interpretados altamente equipados dinámicamente equipados ya dependiendo de la necesidad que se tenga se escoge
(12:00) uno y sobre cualquiera de ellos lo puedes hacer siempre y cuando tengas la lógica desde que tú tengas la lógica y tengas claro esto a cobrar a cobrar no hay nada más listo y algo importante es identificar diferentes soluciones a veces cuando nosotros comenzamos tenemos las soluciones a un problema diseñamos tenemos los datos de entrada la salida la fórmula es genial óyeme pero si lo hacemos producto por producto me voy a demorar un poquito más qué tal si sumamos todos los productos y le aplicamos el iva esa es otra solución
(12:38) veamos y vale qué tal si mejor lo hacemos producto por producto porque es que hay unos productos que no tienen el 18 si no que tienen un poquito más o tienen un poquito menos ok siempre debes tratar de identificar otras soluciones que te permitan hacer más eficiente el programa o más efectivo ya dependiendo de la necesidad entonces y teniendo eso claro de que no te tienes que casar con un lenguaje y que no tienes que tener una única solución ya vas a tener muchas opciones para desarrollar vale vamos a calcular si un año es bisiesto
(13:17) ah no ya les demostré el resultado perdón vamos a calcular si un año es bisiesto yo soy el cliente ok para las personas que lo están grabando yo voy a decir todo lo que me digan para que lo escuche te puedo contratar a ti sí quiero que me hagas un programa que me diga si un año es bisiesto o no cada cuanto sea un año y gesto perfecto ya estás identificando el problema cierto que más necesitas estar preguntando que cada cuánto será un año bisiesto que más necesitas s no me interesa crítica no porque yo quiero calcular cualquier año
(14:08) no no no ojo porque tú estás llegando aquí quieres tener los datos de entrada ya me pediste simplemente cada cuánto entonces ya sabes bueno me estás preguntando el enunciado quiero que me digas qué datos de entrada quieres que te dé analiza eso que datos de entrada quieres que te dé un número el año quiero saber que el dato de entrada que va a tener esa solución va a ser un año yo te doy un año y tú me tienes que decir si es bisiesto no pregunta me esto qué quieres ver qué quieres ver no yo soy el cliente de estas resoluciones
(14:53) pregúntame preguntarme a mí que quiero ver como resultado yo quiero que me digas si o no si es bisiesto o no es bisiesto genial esa está muy buena eso es importante ya sabemos los datos de entrada que yo pueda dar un año un número las datos de salida va a ser un sí o no las fórmulas te la voy a dar los años bisiestos son aquellos que son múltiplos de 4 siempre y cuando no sean múltiplos de 100 pero si sean múltiples de 400 eso es un año bisiesto ya tenéis las fórmulas verdad no te las aprendas políticas tranquilas estoy mirando es
(15:41) cómo podría resolver un problema vale y que datos que necesitamos acá ejemplos entonces te voy a dar unos ejemplos bueno me tocaría son vamos a tomar el año 2000 se alcanza a ver allá en la ah vamos a ver el 2001 necesito un año bisiesto real por alguien me busca y rapidito quedan años bisiestos para saber 2012 entonces acá yo quiero que me digas sí acá quiero que me digas no acá quiero que me digas si acá quiero que me digas sí perfecto ya tenemos todos los datos necesarios para resolver mi problema o necesidad tengo una necesidad quiero
(16:44) saber cuando un año el desierto como lo analizamos ok tener claro el enunciado quiero saber cuáles años son bisiestos datos de entradas te voy a dar un número que va a ser el número del año datos de salida si o no fórmulas todos aquellos años que son múltiplos de cuatro que no sean múltiplos de siempre y que sí sean o que sean múltiplos de 400 y datos de pruebas los tenemos perfecto ya tenemos nuestro nuestros datos generales para resolverlo vamos a bajar un poquito porfa eso se ve bien genial esto es un pseudo
(17:27) código diré que lo estamos leyendo en palabras naturales en nuestro lenguaje natural podemos entenderlo y así lo vamos a resolver el algoritmo está tiene está bien definido es finito acá inicia donde dice algoritmo año bisiesto y termina donde dice fin de algoritmo va a tener unos datos de entrada ingrese el año entonces a la persona le va a salir una pantallita que dice ingrese el año y vamos a leer el año tenemos las fórmulas si el año es múltiplo de 4 y el año es múltiplo no es múltiplo de 100 o año es muy es múltiplo de 400 es bisiesto ya
(18:13) tenemos todas las fórmulas que te dio el cliente te lo digo pero analizadas te ok analiza este muy bien ya van a ver esto de ellos y no se preocupen solamente estamos hablando de un algoritmo para resolver un problema si cumple el año bisiesto aquí aquí debería decir si solamente sí y si no no perfecto fin y fin del algoritmo cumplimos con resolver la necesidad al cliente es claro genial cierto a mí me gusta mucho más esta forma de pseudo código porque lo estoy hablando de manera natural inicie el escribir leer
(18:55) si tal cosa confirma pero hay otras formas un poco gráficas que también les ayudamos a otras personas cuál es mejor la que a ti te guste no hay una mejor realmente hay unas personas que ven la parte gráfica y lo entienden mucho más rápido y hay personas como yo que vemos la parte escrita y lo entendemos más rápido veamos la parte gráfica tenemos un inicio ingrese el año la misma pregunta si el año el módulo de cuatro y el año no el módulo de 100 o el año el módulo de 400 sí sí sí sí no no y fin ven la parte gráfica
(19:43) en la parte gráfica puedes mirar cómo va tomando las decisiones nuestro algoritmo cuál de las dos es mejor la que te guste realmente cuando estuviéramos ingeniería área de sistemas ingeniería en la parte de la universidad tenemos que aprender las ambas porque la documentación clásica siempre nos exige tener esto pero por experiencia yo no me pongo a hacer esto a menos que el problema no lo entienda escrito sí ya definitivamente tengo que hacer las bolitas y decir mejor cojo por acá y si no cojo por acá lo hago lo hago a mano no necesito un
(20:20) programa de computadora que me haga esto lo puedo hacer a mano perfectamente y tomo las decisiones lo importante es saber cómo entender genera el algoritmo luego de esto ya tú escoges el lenguaje ya no importa el lenguaje ténganlo muy claro que lo quiero en java que lo quiero hacer que lo quiero en javascript que lo quiero en pay tongo ruby lo que quiera lo quiero en sql podríamos hacerlo en sql también tocaría mirar el lenguaje específicamente del motor de base de datos pero también es posible entonces podemos resolver cualquier problema
(20:55) siempre y cuando tengamos bien hecho nuestro algoritmo vale cuéntame una pregunta acción porque resulta que 100 si es múltiplo de 4 conciencia es múltiplo de 4 pero resulta que los años que terminan en 100 no son bisiestos a menos que sea 400 múltiplo de 400 es por eso no es nada de programación y nada es porque así hacia esta lógica le encuentras en cultura así dice wikipedia vale es más por eso perfecto miren esto miren esto ya hicimos nuestro algoritmo ya sabemos cómo resolverlo yo escogí python porque me gusta pero en realidad me gusta más
(22:00) los que me conocen los que me siguen a mi canal o los que me siguen en et y saben que me gusta algo pero python es un lenguaje realmente muy lindo muy lindo miren como aplique eso que hicimos arriba el algoritmo lo hicimos en un lenguaje este código funciona funciona veamos nuestro algoritmo dijiste el año lo teníamos en nuestro algoritmo cierto perfecto capture el año lo teníamos también no ha cambiado nada si el año es múltiplo de cuatro y año no es múltiplo de 100 o el año del múltiplo de 400 sí bueno año bisiesto pero es si y si no
(22:42) no qué cambio nuestro algoritmo no estoy hablando de la sintaxis que en cannes en que cambio nuestro algoritmo en nada veremos si cumple está definido siempre que yo le meta por ejemplo el año 2000 me va a decir si siempre siempre entonces está bien definir es finito si inicia y termina acá es preciso sí porque siempre me va a dar el dato correcto si le doy 2000 me va a decir que si se mide hoy 2001 me ha decir que no es legible bajemos los porfa es legible lo entiendo claro bueno la fórmula se debe entender para el que la
(23:24) interpreta entonces es el año múltiplo de 4 y año no es múltiplo de 100 o el año múltiplo de 400 ok lo estoy entendiendo es fácil de leer entonces cumple con la parte las características del algoritmo tiene unos datos de entrada tiene unos datos de salida tiene un proceso no importa el lenguaje de programación vale genial cuéntamelo pregunta creo que no entiendo tu pregunta aunque en el requerimiento que yo te hice te pedí eso ok si no me lo han solicitado puedes tener las dos opciones claro tú puedes dar un paso más allá y decir oye
(24:16) los negativos en la en el encabezado en la en el enunciado del problema tú tuviste que haberlo tenido muy claro puede pasar y pasa en la vida real que no hayan tenido en cuenta eso que acabas de decir y si coloco un número negativo ok no pasa nada se dieron cuenta después lo corriges no tienes que considerarlo siempre es que tú nunca escribes código si no tienes tu algoritmo listo si no sabes cómo lo vas a resolver vale o sea la idea del algoritmo es saber cómo lo vas a resolver y recuerden que el algoritmo es exactamente a lo que hayas colocado
(24:54) en tu código vale alguna otra duda no todo claro claro sí pero recuerden una cosa ustedes tienen que ir un poquito más allá y hacer ese tipo de preguntas ok ay qué exacto porque hay cosas que yo porque voy a meter un año de negativo porque es posible pero eso lo sabes tú no yo como usuario hasta que este paso así pasa entonces dime o en producción eso te lo aseguro control de calidad es una buena herramienta pero va a pasar se les va a pasar a todos cuando ya funciona esa
(26:04) mientras está así esa es alguna otra duda cuéntame pues quiero que no te entiendo la pregunta la idea del algoritmo siempre es dar tener una entrada un proceso y una salida vale siempre va a solucionar algo para darle la nasa a resolver de la necesidad del cliente entonces el algoritmo tiene que hacer algo que sirva sí no no estamos haciendo nada con el algoritmo pero todos los algoritmos sirven s si se lo tienes ahí es por algo ah ok vale perfecto eso está muy bien me preguntan si el algoritmo si los algoritmos son escalables va la
(27:01) respuesta de la siguiente forma depende qué es lo que pasa aquí estamos hablando de programación estructurada paso a paso que la base de todo pero más adelante tienen que comenzar a aprender los paradigmas de programación que les se comentó álvaro paradigma de programación orientada a objetos paradigma programación funcional porque el solo algoritmo en sí sencillito pueda que no no te cubra toda esa escalabilidad decir cuando el programa comienza a crecer no te va a cumplir entonces con los otros paradigmas de
(27:36) programación comienzas a resolver esos problemas de escalabilidad vale lo importante aquí es comenzar resolviendo un pequeño un problema pequeño y yo siempre les digo a todos cuando llegan me dicen profe que tengo que aprender para hacer un über dijo aprende a programar lo primero que tienes que hacer pero programa no es todos los paradigmas de programación no las bases comienzan con los pequeños y haces un tubo es decir una lista de tareas que yo quiero hacer mi lista de tareas propias no quiero bajar una aplicación sino que quiero hacer una
(28:07) lista de tareas de obliga hoy tengo que hacer la tarea de matemáticas hace la tarea y voy a chuleando si ya la hice o no comiencen por ahí que es muy sencillo siempre comiencen por ahí cuéntame exacto cada vez hay algo o corrige o corrige un problema que se detectó que no paso por cali o sea que la calidad no lo pudo ver vale alguna otra pregunta no genial saquen una hojita nada mentiras lo vamos a hacer en javascript mamá se lo lleva a escribir rapidito les parece muy bien tenemos el dato de entrada ok vamos con la lógica
(28:52) la lógica cambia o sea si el año es múltiplo de 4 pero no es múltiplo de 100 o es múltiplo de 400 es bisiesto mira lo que voy a hacer aquí el mejor invento que se han hecho en en tecnología es lo mejor de verdad pero pero hay algo que se llama la sintaxis la lógica no cambia pero la forma en que lo escribes de un lenguaje a otro si cambia vale eso es lo único pero la lógica sigue siendo la misma cositas que tengo que cambiar la primera tengo que meter todo esto dentro del paréntesis acá en javascript listo segundo ya no tengo dos puntos en
(29:42) python sí no esta llave cita de apertura y tengo que tener la llave cita de cierre porque en el javascript lo necesito qué bonito miren eso voy a darle un tabulador acá si no se salió genial entonces ya ves que necesita las llaves y estás vale perfecto aquí cierra live ya que abre el else vamos a cambiar la forma en que imprime porque ya script para imprimir en la consola igual que como lo estamos haciendo con python necesita otra función cita que se llama que del objeto con sol la función se llama log con un solo punto
(30:39) no se necesita punto y coma ya escriba hace un buen tiempo creo que nunca se necesitaba dicen que por buenas prácticas pero hoy en día ya no se usa si tú miras los proyectos los punto y coma ya no se usan y llaves en python se necesita la palabra and que es y ya lo van a ver ahoritica cuando vean en operadores lógicos pero si cambia esto listo y acá pues por buena práctica nos pide que hagamos esto vale creo que ya no hay necesidad de cambiar nada más pero miren que no hemos cambiado más que sintaxis la forma en que escriben y la
(31:22) forma en que colocan la condición los l'inter son unos plugins que se instalan en los editores de texto o en los ide y él te va mostrando hoy aquí hay un errorcito le faltó cerrarla el paréntesis que eso ya te lo hace líder ya no tienes que estar pensando ese chiste el punto y coma la verdad yo no lo entiendo hoy en día lo entendería esos meses que dicen que el punto y coma ganado por escondidas durante años eso lo entiendo hace diez años pero hoy en día cada vez que te falta algo el líder te dice aquí y falta un punto y coma o
(32:00) falta algo entonces no lo entiendo vamos a hacerlo ngo vale tengo va a ser un poquito más largo y van a decir hoy es ego tan feo es algo tan feo todo eso que tienen que escribir para solamente sacar un número cierto pero una vez ven cómo se hace deploy cómo se programa no se van a pasar así como yo necesita una función principal aquí porque así me lo pide pero ahí viene que voy a hacer el mejor invento del año del año de toda la historia d de la computación si todavía no me acostumbraste detox porque hacia abajo
(32:53) es hacia arriba pero bueno son cositas vamos a organizarlo para él vamos a organizarlo para el lenguaje de programación como vale una constante que le voy a llamar año y acá le voy a colocar efe mt punto press cannes perdón digitel año porcentaje de coma perdón aquí están mal no puedo hacerlo como constante tiene que ser una variable listo ya tengo el año las validaciones no necesito estos paréntesis que envuelven todo el contenido no lo necesito no necesito los triples igual lo que es módulo lo que es el operador y
(33:58) lo que es el operador o sigue siendo lo mismo y acá en lugar de hacer un cónsul lo escribo efe mt punto print ln y lo mismo aquí abajo efe mt punto print ln y listo creo que si no hay errores de type o por ahí así funciona quiero que me digan que cambio el algoritmo nada porque el algoritmo es tan importante la parte básica la parte básica de la programación resolver el problema primero escrito bueno muchas veces ya con el tiempo nos vamos directamente a código por experiencia pero cuando estamos comenzando resuelto resolvamos el
(34:47) problema con el algoritmo y verán ya puede ser de manera gráfica o de manera escrita con lenguaje natural pero ya van a entender esto lo único que tengo que hacer es ponerlo en el lenguaje de programación que quiero no más de resto la lógica sigue siendo la misma lo único que cambia es para imprimir en uno fue print en otro fue cònsol lock y el otro fue efe mt print ln genial ya tenemos la parte básica para reprogramar ok última pregunta cuéntame en javascript ese es un invento ya ves que sólo lo tiene javascript pero en javascript lo
(35:30) que hace es decirte el valor es igual o el tipo de dato y el valor es igual esa es la única diferencia entonces se recomienda utilizar el triple igual para que mire el tipo de dato y el valor listo genial eso es algo ritmo espero que les haya quedado claro que les haya gustado y vamos a continuar con tipos de datos vale muchas gracias

